name: Baddy Agent CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GIT_TERMINAL_PROMPT: 0

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Tests
        run: |
          if [ -d "tests" ]; then
            echo "Running tests..."
            pytest tests || true
          else
            echo "No tests directory found. Skipping tests."
          fi

  coverage:
    needs: test
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  build:
    needs: test
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          brew install create-dmg

      - name: Create App Bundle
        run: ./create_app_bundle.sh

      - name: Create DMG
        run: ./create_dmg_command.sh

  release:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Release
        run: |
          python src/cli_agent/release.py --app BaddyAgent.app --notes release_notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Deploy to Cloud
        run: |
          python deploy.py --input baddy_agent.dmg --ref_name="${GITHUB_REF_NAME}"
        env:
          DROPBOX_TOKEN: ${{ secrets.DROPBOX_TOKEN }}
          GDRIVE_CREDENTIALS: ${{ secrets.GDRIVE_CREDENTIALS }}

  sync:
    needs: deploy
    runs-on: macos-latest
    steps:
      - name: Sync to Thronesight
        run: bash scripts/thronesight_sync.sh
        env:
          THRONESIGHT_API_KEY: ${{ secrets.THRONESIGHT_API_KEY }}

  notify:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Send Discord Notification
        run: |
          jq -n --arg status "${{ needs.test.result }}" \
          '{
              username: "CI Pipeline Report",
              embeds: [{
                title: "Workflow completed with status: \($status)",
                description: "CI finished with: \($status)",
                color: ($status == "success" | tonumber)
              }]
          }' | curl -H "Content-Type: application/json" -d @- "${{ secrets.DISCORD_WEBHOOK }}"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
