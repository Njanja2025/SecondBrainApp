name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Python tests with pytest
        run: |
          export PYTHONPATH=src
          pytest tests/ --disable-warnings -v || true
        continue-on-error: true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Node dependencies (MeshDiagnosticsPanel)
        run: |
          cd NjaxModules/ViscoBuilds/MeshDiagnosticsPanel
          npm install

      - name: Build and test MeshDiagnosticsPanel (React)
        run: |
          cd NjaxModules/ViscoBuilds/MeshDiagnosticsPanel
          npm run build
          npm test -- --watchAll=false || true
        continue-on-error: true

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Build SmartHousingUI (Flutter)
        run: |
          cd NjaxModules/ViscoBuilds/SmartHousingUI
          flutter pub get
          flutter build web || true
        continue-on-error: true

      - name: Build LiveTrackerMobile (Flutter)
        run: |
          cd NjaxModules/ViscoBuilds/LiveTrackerMobile
          flutter pub get
          flutter build web || true
        continue-on-error: true

      - name: Build HeatmapVisualizer (D3.js)
        run: |
          echo "No build needed for D3.js module"

      - name: Upload test results (if any)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: tests/

      - name: Deploy app (production)
        if: github.ref == 'refs/heads/main' && success()
        run: |
          bash deploy.sh
          echo "Deployed to production."
