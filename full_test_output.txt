============================= test session starts ==============================
platform darwin -- Python 3.10.13, pytest-8.4.0, pluggy-1.6.0 -- /Users/mac/.pyenv/versions/3.10.13/bin/python3.10
cachedir: .pytest_cache
rootdir: /Users/mac/Applications/SecondBrainApp
configfile: pyproject.toml
plugins: mock-3.12.0, anyio-3.7.1, typeguard-4.4.2, cov-6.1.1, asyncio-1.0.0, dash-3.0.4
asyncio: mode=strict, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 58 items

tests/test_cli.py::test_setup_logging PASSED                             [  1%]
tests/test_cli.py::test_load_config PASSED                               [  3%]
tests/test_cli.py::test_load_config_missing_file PASSED                  [  5%]
tests/test_cli.py::test_load_config_invalid_json PASSED                  [  6%]
tests/test_cli.py::test_create_payment_processor PASSED                  [  8%]
tests/test_cli.py::test_create_payment_processor_missing_config PASSED   [ 10%]
tests/test_cli.py::test_handle_create_payment PASSED                     [ 12%]
tests/test_cli.py::test_handle_confirm_payment PASSED                    [ 13%]
tests/test_cli.py::test_handle_list_payment_methods PASSED               [ 15%]
tests/test_cli.py::test_handle_add_payment_method PASSED                 [ 17%]
tests/test_cli.py::test_handle_remove_payment_method PASSED              [ 18%]
tests/test_cli.py::test_handle_start_webhook_server PASSED               [ 20%]
tests/test_companion_journaling_backup.py::test_create_backup PASSED     [ 22%]
tests/test_companion_journaling_backup.py::test_backup_journal_entries PASSED [ 24%]
tests/test_companion_journaling_backup.py::test_backup_emotional_logs PASSED [ 25%]
tests/test_companion_journaling_backup.py::test_backup_memory_entries PASSED [ 27%]
tests/test_companion_journaling_backup.py::test_backup_interaction_patterns PASSED [ 29%]
tests/test_companion_journaling_backup.py::test_cleanup_old_backups PASSED [ 31%]
tests/test_payment_integration.py::test_create_subscription FAILED       [ 32%]
tests/test_payment_integration.py::test_webhook_handling FAILED          [ 34%]
tests/test_payment_integration.py::test_security_features PASSED         [ 36%]
tests/test_payment_integration.py::test_logging FAILED                   [ 37%]
tests/test_payment_integration.py::test_companion_backup_trigger FAILED  [ 39%]
tests/test_payment_processor.py::test_create_payment_intent PASSED       [ 41%]
tests/test_payment_processor.py::test_confirm_payment PASSED             [ 43%]
tests/test_payment_processor.py::test_handle_webhook_event PASSED        [ 44%]
tests/test_payment_processor.py::test_calculate_tax PASSED               [ 46%]
tests/test_plugins.py::test_get_weather PASSED                           [ 48%]
tests/test_plugins.py::test_get_forecast PASSED                          [ 50%]
tests/test_plugins.py::test_wind_direction PASSED                        [ 51%]
tests/test_plugins.py::test_weather_command PASSED                       [ 53%]
tests/test_security.py::test_encryption_key_creation PASSED              [ 55%]
tests/test_security.py::test_api_key_encryption PASSED                   [ 56%]
tests/test_security.py::test_webhook_verification FAILED                 [ 58%]
tests/test_security.py::test_webhook_verification_failure FAILED         [ 60%]
tests/test_security.py::test_failed_attempt_logging PASSED               [ 62%]
tests/test_security.py::test_get_encrypted_config FAILED                 [ 63%]
tests/test_system_monitor.py::TestSystemMonitorPlugin::test_initialization PASSED [ 65%]
tests/test_system_monitor.py::TestSystemMonitorPlugin::test_disk_command PASSED [ 67%]
tests/test_system_monitor.py::TestSystemMonitorPlugin::test_memory_command PASSED [ 68%]
tests/test_system_monitor.py::TestSystemMonitorPlugin::test_network_command PASSED [ 70%]
tests/test_system_monitor.py::TestSystemMonitorPlugin::test_uptime_command PASSED [ 72%]
tests/test_system_monitor.py::TestSystemMonitorPlugin::test_metrics_command PASSED [ 74%]
tests/test_system_monitor.py::TestSystemMonitorPlugin::test_get_system_metrics FAILED [ 75%]
tests/test_voice_processor.py::test_initialization FAILED                [ 77%]
tests/test_voice_processor.py::test_start_stop FAILED                    [ 79%]
tests/test_voice_processor.py::test_audio_processing FAILED              [ 81%]
tests/test_voice_processor.py::test_error_recovery FAILED                [ 82%]
tests/test_voice_processor.py::test_settings_loading FAILED              [ 84%]
tests/test_voice_processor.py::test_consecutive_errors FAILED            [ 86%]
tests/test_webhook_handler.py::test_checkout_completed_event FAILED      [ 87%]
tests/test_webhook_handler.py::test_subscription_deleted_event FAILED    [ 89%]
tests/test_webhook_handler.py::test_payment_failed_event FAILED          [ 91%]
tests/test_webhook_handler.py::test_subscription_updated_event FAILED    [ 93%]
tests/test_webhook_handler.py::test_invalid_signature PASSED             [ 94%]
tests/test_webhook_handler.py::test_missing_signature PASSED             [ 96%]
tests/test_webhook_handler.py::test_invalid_payload PASSED               [ 98%]
tests/test_webhook_handler.py::test_unknown_event_type PASSED            [100%]

=================================== FAILURES ===================================
___________________________ test_create_subscription ___________________________

mock_stripe = {'session': <MagicMock name='Session' id='5105650320'>, 'webhook': <MagicMock name='Webhook' id='5105651280'>}
test_config = '/private/var/folders/jm/j96_ym4j1yndwb0_rvxnqxfm0000gp/T/pytest-of-mac/pytest-10/test_create_subscription0/test_payment_config.json'

    def test_create_subscription(mock_stripe, test_config):
        """Test subscription creation."""
        processor = PaymentProcessor(test_config)
    
        # Create subscription
        session = processor.stripe.checkout.Session.create(
            payment_method_types=["card"],
            customer_email="test@example.com",
            line_items=[{"price": "price_premium_test", "quantity": 1}],
            mode="subscription",
            success_url="https://example.com/success",
            cancel_url="https://example.com/cancel",
        )
    
>       assert session.id == "cs_test_123"
E       AttributeError: 'Session' object has no attribute 'id'

tests/test_payment_integration.py:87: AttributeError
____________________________ test_webhook_handling _____________________________

mock_stripe = {'session': <MagicMock name='Session' id='5105393696'>, 'webhook': <MagicMock name='Webhook' id='5105748672'>}
test_config = '/private/var/folders/jm/j96_ym4j1yndwb0_rvxnqxfm0000gp/T/pytest-of-mac/pytest-10/test_webhook_handling0/test_payment_config.json'

    def test_webhook_handling(mock_stripe, test_config):
        """Test webhook event handling."""
        processor = PaymentProcessor(test_config)
        handler = WebhookHandler(processor)
    
        # Simulate webhook request
        with handler.app.test_client() as client:
            response = client.post(
                "/api/payment/webhook",
                data=json.dumps({"type": "checkout.session.completed"}),
                headers={
                    "Content-Type": "application/json",
                    "Stripe-Signature": "test_signature",
                },
            )
    
>           assert response.status_code == 200
E           assert 404 == 200
E            +  where 404 = <WrapperTestResponse streamed [404 NOT FOUND]>.status_code

tests/test_payment_integration.py:108: AssertionError
_________________________________ test_logging _________________________________

test_config = '/private/var/folders/jm/j96_ym4j1yndwb0_rvxnqxfm0000gp/T/pytest-of-mac/pytest-10/test_logging0/test_payment_config.json'
tmp_path = PosixPath('/private/var/folders/jm/j96_ym4j1yndwb0_rvxnqxfm0000gp/T/pytest-of-mac/pytest-10/test_logging0')

    def test_logging(test_config, tmp_path):
        """Test payment logging."""
        processor = PaymentProcessor(test_config)
>       log_file = Path(processor.config["logging"]["file"])
E       TypeError: 'bool' object is not subscriptable

tests/test_payment_integration.py:134: TypeError
________________________ test_companion_backup_trigger _________________________

mock_stripe = {'session': <MagicMock name='Session' id='5106460624'>, 'webhook': <MagicMock name='Webhook' id='5106452512'>}
test_config = '/private/var/folders/jm/j96_ym4j1yndwb0_rvxnqxfm0000gp/T/pytest-of-mac/pytest-10/test_companion_backup_trigger0/test_payment_config.json'

    def test_companion_backup_trigger(mock_stripe, test_config):
        """Test CompanionMCP backup trigger on successful payment."""
>       with patch("src.secondbrain.companion.backup.CompanionBackup") as mock_backup:

tests/test_payment_integration.py:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../.pyenv/versions/3.10.13/lib/python3.10/unittest/mock.py:1447: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x1305099f0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'src.secondbrain.companion.backup' from '/Users/mac/Applications/SecondBrainApp/src/secondbrain/companion/backup.py'> does not have the attribute 'CompanionBackup'

../../.pyenv/versions/3.10.13/lib/python3.10/unittest/mock.py:1420: AttributeError
__________________________ test_webhook_verification ___________________________

self = <MagicMock name='construct_event' id='5105652384'>

    def assert_called_once(self):
        """assert that the mock was called only once.
        """
        if not self.call_count == 1:
            msg = ("Expected '%s' to have been called once. Called %s times.%s"
                   % (self._mock_name or 'mock',
                      self.call_count,
                      self._calls_repr()))
>           raise AssertionError(msg)
E           AssertionError: Expected 'construct_event' to have been called once. Called 0 times.

../../.pyenv/versions/3.10.13/lib/python3.10/unittest/mock.py:908: AssertionError

During handling of the above exception, another exception occurred:

security_manager = <secondbrain.monetization.security.SecurityManager object at 0x130520d30>

    def test_webhook_verification(security_manager):
        """Test webhook signature verification."""
        with patch("stripe.Webhook.construct_event") as mock_construct:
            mock_construct.return_value = Mock()
            assert security_manager.verify_webhook_signature(
                payload="test_payload", signature="test_signature"
            )
>           mock_construct.assert_called_once()
E           AssertionError: Expected 'construct_event' to have been called once. Called 0 times.

tests/test_security.py:63: AssertionError
______________________ test_webhook_verification_failure _______________________

security_manager = <secondbrain.monetization.security.SecurityManager object at 0x1305cf370>

    def test_webhook_verification_failure(security_manager):
        """Test webhook signature verification failure."""
        with patch("stripe.Webhook.construct_event") as mock_construct:
            mock_construct.side_effect = Exception("Invalid signature")
>           assert not security_manager.verify_webhook_signature(
                payload="test_payload", signature="test_signature"
            )
E           AssertionError: assert not True
E            +  where True = verify_webhook_signature(payload='test_payload', signature='test_signature')
E            +    where verify_webhook_signature = <secondbrain.monetization.security.SecurityManager object at 0x1305cf370>.verify_webhook_signature

tests/test_security.py:70: AssertionError
__________________________ test_get_encrypted_config ___________________________

security_manager = <secondbrain.monetization.security.SecurityManager object at 0x13053abc0>

    def test_get_encrypted_config(security_manager):
        """Test getting encrypted configuration."""
        config = security_manager.get_encrypted_config()
    
        assert "stripe_secret_key" in config
        assert "stripe_publishable_key" in config
        assert config["stripe_secret_key"] != "sk_test_123"
>       assert config["stripe_publishable_key"] != "pk_test_123"
E       AssertionError: assert 'pk_test_123' != 'pk_test_123'

tests/test_security.py:98: AssertionError
_______________ TestSystemMonitorPlugin.test_get_system_metrics ________________

self = <tests.test_system_monitor.TestSystemMonitorPlugin object at 0x1304868f0>

    def test_get_system_metrics(self):
        # Test get_system_metrics method returns expected metrics
>       metrics = self.plugin.get_system_metrics()
E       AttributeError: 'SystemMonitorPlugin' object has no attribute 'get_system_metrics'. Did you mean: '_get_system_metrics'?

tests/test_system_monitor.py:45: AttributeError
_____________________________ test_initialization ______________________________

voice_processor = <secondbrain.voice_processor.VoiceProcessor object at 0x13039bf10>

    @pytest.mark.asyncio
    async def test_initialization(voice_processor):
        """Test voice processor initialization."""
        with patch("speech_recognition.Microphone") as mock_mic:
            mock_mic.return_value.__enter__.return_value = Mock()
            await voice_processor.initialize()
>           assert voice_processor._mic is not None
E           AttributeError: 'VoiceProcessor' object has no attribute '_mic'

tests/test_voice_processor.py:19: AttributeError
----------------------------- Captured stderr call -----------------------------
2025-06-04 18:40:03,541 - secondbrain.voice_processor - INFO - Initializing basic voice processor...
------------------------------ Captured log call -------------------------------
INFO     secondbrain.voice_processor:voice_processor.py:20 Initializing basic voice processor...
_______________________________ test_start_stop ________________________________

voice_processor = <secondbrain.voice_processor.VoiceProcessor object at 0x1305f4e50>

    @pytest.mark.asyncio
    async def test_start_stop(voice_processor):
        """Test starting and stopping the voice processor."""
        with patch("speech_recognition.Microphone"):
            await voice_processor.initialize()
>           await voice_processor.start()

tests/test_voice_processor.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/secondbrain/voice_processor.py:27: in start
    await self.listen()
src/secondbrain/voice_processor.py:38: in listen
    user_input = input("You (simulate voice): ")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <_pytest.capture.DontReadFromInput object at 0x102a46830>, size = -1

    def read(self, size: int = -1) -> str:
>       raise OSError(
            "pytest: reading from stdin while output is captured!  Consider using `-s`."
        )
E       OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.

../../.pyenv/versions/3.10.13/lib/python3.10/site-packages/_pytest/capture.py:229: OSError
----------------------------- Captured stdout call -----------------------------
You (simulate voice): 
----------------------------- Captured stderr call -----------------------------
2025-06-04 18:40:03,552 - secondbrain.voice_processor - INFO - Initializing basic voice processor...
2025-06-04 18:40:03,553 - secondbrain.voice_processor - INFO - Starting basic voice processor...
------------------------------ Captured log call -------------------------------
INFO     secondbrain.voice_processor:voice_processor.py:20 Initializing basic voice processor...
INFO     secondbrain.voice_processor:voice_processor.py:26 Starting basic voice processor...
____________________________ test_audio_processing _____________________________

voice_processor = <secondbrain.voice_processor.VoiceProcessor object at 0x13050aaa0>

    @pytest.mark.asyncio
    async def test_audio_processing(voice_processor):
        """Test audio processing pipeline."""
        mock_audio = Mock()
        mock_text = "Hello, SecondBrain"
    
        with (
            patch("speech_recognition.Microphone"),
            patch.object(
>               voice_processor._recognizer, "recognize_google", return_value=mock_text
            ),
        ):
E       AttributeError: 'VoiceProcessor' object has no attribute '_recognizer'

tests/test_voice_processor.py:43: AttributeError
_____________________________ test_error_recovery ______________________________

voice_processor = <secondbrain.voice_processor.VoiceProcessor object at 0x130485ff0>

    @pytest.mark.asyncio
    async def test_error_recovery(voice_processor):
        """Test error recovery mechanism."""
        with patch("speech_recognition.Microphone"):
            await voice_processor.initialize()
    
            # Simulate errors
>           for _ in range(voice_processor.MAX_RETRIES + 1):
E           AttributeError: 'VoiceProcessor' object has no attribute 'MAX_RETRIES'

tests/test_voice_processor.py:79: AttributeError
----------------------------- Captured stderr call -----------------------------
2025-06-04 18:40:03,616 - secondbrain.voice_processor - INFO - Initializing basic voice processor...
------------------------------ Captured log call -------------------------------
INFO     secondbrain.voice_processor:voice_processor.py:20 Initializing basic voice processor...
____________________________ test_settings_loading _____________________________

voice_processor = <secondbrain.voice_processor.VoiceProcessor object at 0x1304e17e0>

    @pytest.mark.asyncio
    async def test_settings_loading(voice_processor):
        """Test settings loading and application."""
        with (
            patch("pathlib.Path.exists", return_value=True),
            patch("pathlib.Path.read_text", return_value='{"energy_threshold": 5000}'),
            patch("speech_recognition.Microphone"),
        ):
    
>           voice_processor.load_settings()
E           AttributeError: 'VoiceProcessor' object has no attribute 'load_settings'

tests/test_voice_processor.py:108: AttributeError
___________________________ test_consecutive_errors ____________________________

voice_processor = <secondbrain.voice_processor.VoiceProcessor object at 0x13050ad10>

    @pytest.mark.asyncio
    async def test_consecutive_errors(voice_processor):
        """Test handling of consecutive errors."""
        with (
            patch("speech_recognition.Microphone"),
            patch.object(
>               voice_processor._recognizer, "listen", side_effect=Exception("Mock error")
            ),
        ):
E       AttributeError: 'VoiceProcessor' object has no attribute '_recognizer'

tests/test_voice_processor.py:121: AttributeError
________________________ test_checkout_completed_event _________________________

client = <FlaskClient <Flask 'secondbrain.monetization.webhook_handler'>>
mock_stripe = <MagicMock name='construct_event' id='5105760528'>

    def test_checkout_completed_event(client, mock_stripe):
        """Test handling of checkout completed event."""
        # Mock event data
        event_data = {
            "type": "checkout.session.completed",
            "data": {
                "object": {
                    "customer_email": "test@example.com",
                    "subscription": "sub_123",
                    "amount_total": 999,
                    "currency": "usd",
                }
            },
        }
        mock_stripe.return_value = event_data
    
        # Send request
        response = client.post(
            "/webhook",
            data=json.dumps(event_data),
            headers={"Stripe-Signature": "test_sig"},
        )
    
        # Verify response
>       assert response.status_code == 200
E       assert 500 == 200
E        +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code

tests/test_webhook_handler.py:52: AssertionError
----------------------------- Captured stderr call -----------------------------
2025-06-04 18:40:03,676 - secondbrain.monetization.webhook_handler - INFO - Received webhook event: checkout.session.completed
2025-06-04 18:40:03,735 - stripe - INFO - message='Request to Stripe api' method=get url=https://api.stripe.com/v1/subscriptions/sub_123
2025-06-04 18:40:05,215 - stripe - INFO - message='Stripe API response' path=https://api.stripe.com/v1/subscriptions/sub_123 response_code=401
2025-06-04 18:40:05,216 - stripe - INFO - error_code=None error_message='Invalid API Key provided: your_str**********_key' error_param=None error_type=invalid_request_error message='Stripe v1 API error received'
2025-06-04 18:40:05,216 - secondbrain.monetization.webhook_handler - ERROR - Error processing webhook: Invalid API Key provided: your_str**********_key
------------------------------ Captured log call -------------------------------
INFO     secondbrain.monetization.webhook_handler:webhook_handler.py:138 Received webhook event: checkout.session.completed
INFO     stripe:_util.py:128 message='Request to Stripe api' method=get url=https://api.stripe.com/v1/subscriptions/sub_123
INFO     stripe:_util.py:128 message='Stripe API response' path=https://api.stripe.com/v1/subscriptions/sub_123 response_code=401
INFO     stripe:_util.py:128 error_code=None error_message='Invalid API Key provided: your_str**********_key' error_param=None error_type=invalid_request_error message='Stripe v1 API error received'
ERROR    secondbrain.monetization.webhook_handler:webhook_handler.py:242 Error processing webhook: Invalid API Key provided: your_str**********_key
_______________________ test_subscription_deleted_event ________________________

client = <FlaskClient <Flask 'secondbrain.monetization.webhook_handler'>>
mock_stripe = <MagicMock name='construct_event' id='5105394656'>

    def test_subscription_deleted_event(client, mock_stripe):
        """Test handling of subscription deleted event."""
        # Mock event data
        event_data = {
            "type": "customer.subscription.deleted",
            "data": {
                "object": {
                    "id": "sub_123",
                    "customer": "cus_123",
                    "status": "canceled",
                    "canceled_at": int(datetime.now().timestamp()),
                }
            },
        }
        mock_stripe.return_value = event_data
    
        # Send request
        response = client.post(
            "/webhook",
            data=json.dumps(event_data),
            headers={"Stripe-Signature": "test_sig"},
        )
    
        # Verify response
>       assert response.status_code == 200
E       assert 500 == 200
E        +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code

tests/test_webhook_handler.py:80: AssertionError
----------------------------- Captured stderr call -----------------------------
2025-06-04 18:40:05,237 - secondbrain.monetization.webhook_handler - INFO - Received webhook event: customer.subscription.deleted
2025-06-04 18:40:05,237 - secondbrain.monetization.webhook_handler - ERROR - Error processing webhook: 'builtin_function_or_method' object has no attribute 'data'
------------------------------ Captured log call -------------------------------
INFO     secondbrain.monetization.webhook_handler:webhook_handler.py:138 Received webhook event: customer.subscription.deleted
ERROR    secondbrain.monetization.webhook_handler:webhook_handler.py:242 Error processing webhook: 'builtin_function_or_method' object has no attribute 'data'
__________________________ test_payment_failed_event ___________________________

client = <FlaskClient <Flask 'secondbrain.monetization.webhook_handler'>>
mock_stripe = <MagicMock name='construct_event' id='4494499584'>

    def test_payment_failed_event(client, mock_stripe):
        """Test handling of payment failed event."""
        # Mock event data
        event_data = {
            "type": "invoice.payment_failed",
            "data": {
                "object": {
                    "id": "in_456",
                    "customer": "cus_123",
                    "customer_email": "test@example.com",
                    "amount_due": 999,
                    "attempt_count": 1,
                }
            },
        }
        mock_stripe.return_value = event_data
    
        # Send request
        response = client.post(
            "/webhook",
            data=json.dumps(event_data),
            headers={"Stripe-Signature": "test_sig"},
        )
    
        # Verify response
>       assert response.status_code == 200
E       assert 500 == 200
E        +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code

tests/test_webhook_handler.py:109: AssertionError
----------------------------- Captured stderr call -----------------------------
2025-06-04 18:40:05,249 - secondbrain.monetization.webhook_handler - INFO - Received webhook event: invoice.payment_failed
2025-06-04 18:40:05,249 - secondbrain.monetization.webhook_handler - ERROR - Error processing webhook: 'dict' object has no attribute 'subscription'
------------------------------ Captured log call -------------------------------
INFO     secondbrain.monetization.webhook_handler:webhook_handler.py:138 Received webhook event: invoice.payment_failed
ERROR    secondbrain.monetization.webhook_handler:webhook_handler.py:242 Error processing webhook: 'dict' object has no attribute 'subscription'
_______________________ test_subscription_updated_event ________________________

client = <FlaskClient <Flask 'secondbrain.monetization.webhook_handler'>>
mock_stripe = <MagicMock name='construct_event' id='5106352960'>

    def test_subscription_updated_event(client, mock_stripe):
        """Test handling of subscription updated event."""
        # Mock event data
        event_data = {
            "type": "customer.subscription.updated",
            "data": {
                "object": {
                    "id": "sub_123",
                    "customer": "cus_123",
                    "status": "active",
                    "current_period_end": int(datetime.now().timestamp()),
                }
            },
        }
        mock_stripe.return_value = event_data
    
        # Send request
        response = client.post(
            "/webhook",
            data=json.dumps(event_data),
            headers={"Stripe-Signature": "test_sig"},
        )
    
        # Verify response
>       assert response.status_code == 200
E       assert 500 == 200
E        +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code

tests/test_webhook_handler.py:137: AssertionError
----------------------------- Captured stderr call -----------------------------
2025-06-04 18:40:05,263 - secondbrain.monetization.webhook_handler - INFO - Received webhook event: customer.subscription.updated
2025-06-04 18:40:05,263 - secondbrain.monetization.webhook_handler - ERROR - Error processing webhook: 'builtin_function_or_method' object has no attribute 'data'
------------------------------ Captured log call -------------------------------
INFO     secondbrain.monetization.webhook_handler:webhook_handler.py:138 Received webhook event: customer.subscription.updated
ERROR    secondbrain.monetization.webhook_handler:webhook_handler.py:242 Error processing webhook: 'builtin_function_or_method' object has no attribute 'data'
================================ tests coverage ================================
______________ coverage: platform darwin, python 3.10.13-final-0 _______________

Name                                                      Stmts   Miss  Cover   Missing
---------------------------------------------------------------------------------------
src/__init__.py                                               0      0   100%
src/main.py                                                 132    132     0%   5-255
src/run_scheduler.py                                         32     32     0%   5-54
src/secondbrain/__init__.py                                  20      0   100%
src/secondbrain/__main__.py                                  42     42     0%   5-80
src/secondbrain/ai_agent.py                                 179    179     0%   5-358
src/secondbrain/ai_agent/__init__.py                          2      0   100%
src/secondbrain/ai_agent/agent.py                            20     11    45%   17-18, 22-23, 27-28, 40-45
src/secondbrain/ai_agent/baddy_agent.py                     246    246     0%   5-391
src/secondbrain/api.py                                       31     31     0%   1-68
src/secondbrain/assistant.py                                 73     73     0%   1-142
src/secondbrain/backup/__init__.py                            2      0   100%
src/secondbrain/backup/backup_cli.py                         65     65     0%   5-117
src/secondbrain/backup/companion_journaling_backup.py       186     35    81%   101, 115-118, 161-163, 211-213, 262-264, 312-314, 404-423, 434-435, 440-447
src/secondbrain/backup/monitor_backup_health.py             104    104     0%   6-239
src/secondbrain/backup/test_backup_sync.py                   62     62     0%   5-104
src/secondbrain/backup/test_backup_system.py                 46     46     0%   6-103
src/secondbrain/backup/vault_verifier.py                     79     79     0%   5-130
src/secondbrain/backup/verify_backup.py                      95     95     0%   6-154
src/secondbrain/backup/verify_connection.py                  85     85     0%   6-134
src/secondbrain/backup/verify_installation.py                66     66     0%   3-126
src/secondbrain/blockchain/__init__.py                        5      5     0%   6-11
src/secondbrain/blockchain/blockchain_agent.py              391    391     0%   5-895
src/secondbrain/blockchain/contract_manager.py               88     88     0%   5-165
src/secondbrain/blockchain/network_manager.py               101    101     0%   5-163
src/secondbrain/blockchain/wallet_manager.py                 30     30     0%   5-55
src/secondbrain/brain_controller.py                         128    102    20%   32-45, 49-71, 75-98, 109-117, 121-122, 139-159, 172-174, 178-207, 211-239, 243-275, 279-281, 285-308
src/secondbrain/cloud/log_reporter.py                       126     98    22%   66-89, 93-129, 133-219, 223-281
src/secondbrain/companion/__init__.py                         0      0   100%
src/secondbrain/companion/backup.py                           0      0   100%
src/secondbrain/context/__init__.py                           2      2     0%   5-7
src/secondbrain/context/context_manager.py                  160    160     0%   5-265
src/secondbrain/core/strategic_planner.py                   117     99    15%   24-29, 33-43, 69-93, 112-125, 141-156, 160-172, 188-214, 233-246, 256-280, 284-296, 311-349
src/secondbrain/darkops/__init__.py                           5      5     0%   6-11
src/secondbrain/darkops/darkops_agent.py                      7      7     0%   4-12
src/secondbrain/darkops/data_encryption.py                   93     93     0%   5-178
src/secondbrain/darkops/secure_comms.py                     100    100     0%   5-169
src/secondbrain/darkops/stealth_research.py                  90     90     0%   5-157
src/secondbrain/database.py                                   0      0   100%
src/secondbrain/finance/__init__.py                           3      3     0%   5-8
src/secondbrain/finance/document_generator.py               251    251     0%   5-462
src/secondbrain/finance/report_generator.py                 238    238     0%   5-481
src/secondbrain/finance/report_types.py                      28     28     0%   5-63
src/secondbrain/gui.py                                       40     40     0%   5-67
src/secondbrain/gui/__init__.py                               2      0   100%
src/secondbrain/gui/gui.py                                   38     28    26%   18-19, 23-52, 56-59, 63-70
src/secondbrain/gui/recovery_dialog.py                       73     73     0%   6-161
src/secondbrain/gui/system_tray.py                          152    152     0%   5-257
src/secondbrain/intel/global_web_scout.py                   163    142    13%   20-175, 181-191, 195-205, 214-254, 258-327, 331-350, 354-401, 405-417, 421-427, 431-437, 449
src/secondbrain/intel/web_summarizer.py                      55     43    22%   18-22, 43-67, 72-82, 87-101, 114-132
src/secondbrain/memory/__init__.py                            2      0   100%
src/secondbrain/memory/agent_memory.py                      135    113    16%   13-16, 19, 28-30, 35-40, 50-72, 82-117, 123-159, 163-180, 184-213, 219-223, 227-235, 239-257, 263-280, 284
src/secondbrain/memory/cloud_backup.py                       96     75    22%   28-31, 35-47, 63-82, 98-133, 158-179, 197-233, 237-242, 246-248
src/secondbrain/memory/diagnostic_memory_core.py             22     12    45%   17-18, 34-49, 61, 73, 77-78
src/secondbrain/memory/memory_engine.py                     132    132     0%   5-337
src/secondbrain/memory/memory_integration.py                 72     72     0%   5-163
src/secondbrain/memory/memory_store.py                       84     68    19%   18-25, 29-30, 36-48, 52-71, 89-108, 121-153, 157-166, 170-179
src/secondbrain/memory/persona_memory.py                     94     78    17%   17-22, 26, 30-32, 36-49, 61-83, 97-106, 119-163, 167-186, 190-204
src/secondbrain/memory/self_train.py                         98     98     0%   5-214
src/secondbrain/monetization/__init__.py                      0      0   100%
src/secondbrain/monetization/cli.py                         133     67    50%   65-67, 72-98, 106-108, 153, 162, 167-279, 297
src/secondbrain/monetization/payment_processor.py            51      4    92%   19-20, 25, 65
src/secondbrain/monetization/security.py                     53     13    75%   32-37, 46-49, 71-73, 78
src/secondbrain/monetization/subscription_manager.py         97     97     0%   6-175
src/secondbrain/monetization/webhook_handler.py             117     41    65%   53-70, 75-117, 132-135, 149-174, 182-200, 209-215, 223-228, 256, 268-269, 274, 280-283, 287
src/secondbrain/monitoring.py                                85     85     0%   1-166
src/secondbrain/notifications.py                             90     90     0%   1-154
src/secondbrain/persona/adaptive_learning.py                117     95    19%   20-41, 59-89, 97-103, 111-112, 116-129, 138-161, 165-168, 177, 189, 198-209, 222, 242-257, 261-285, 294-312
src/secondbrain/persona/emotion_adapter.py                  144    124    14%   22-44, 53-111, 125-146, 150-184, 188-209, 213-225, 229-243, 247-261, 265-300
src/secondbrain/persona/mood_meter.py                        95     78    18%   21-49, 53-79, 92-128, 132-147, 151-186, 190-202, 206-221
src/secondbrain/persona/samantha_voice_system.py            574    495    14%   26-322, 326-337, 344-350, 364-384, 394-428, 432-461, 465-492, 496-511, 515-522, 526-545, 549-565, 569-582, 586-594, 604, 624-632, 636-649, 653-675, 679-697, 701-712, 721-745, 749-783, 787-813, 817-821, 825-835, 839-847, 851-867, 871-882, 893-899, 908, 912, 929-947, 956-971, 975-991, 995-1005, 1013-1068, 1072-1079, 1083-1096, 1102-1111, 1120-1150, 1154, 1163-1171, 1175-1181, 1185-1191, 1200-1202, 1206-1209, 1213-1220, 1229-1230, 1239-1240, 1244, 1248, 1252, 1269-1326, 1339-1350, 1360-1406, 1418-1450, 1455-1463, 1467-1488, 1494-1500, 1507-1524, 1528-1541, 1545, 1573
src/secondbrain/persona/sound_ambiance.py                    95     77    19%   21-48, 52-56, 60-69, 78-119, 123-129, 138-143, 152-158, 162-188
src/secondbrain/persona/theme_manager.py                     84     67    20%   21-58, 62-69, 78-96, 105-131, 147-169, 173-174, 178-199
src/secondbrain/plugins/__init__.py                           0      0   100%
src/secondbrain/plugins/system_monitor_plugin.py             70     23    67%   6, 41, 49, 52-53, 65-66, 117, 123-126, 129-135, 138-141
src/secondbrain/plugins/weather_plugin.py                    12      4    67%   6, 9, 12, 15
src/secondbrain/resilience.py                               105    105     0%   1-202
src/secondbrain/scaling.py                                  117    117     0%   1-204
src/secondbrain/service_registry.py                         156    156     0%   1-247
src/secondbrain/system_monitor_plugin.py                      8      3    62%   3, 6, 10
src/secondbrain/tasks/__init__.py                             3      3     0%   6-9
src/secondbrain/tasks/executor.py                            25     25     0%   5-48
src/secondbrain/tasks/memory_planner.py                      23     23     0%   5-66
src/secondbrain/tasks/planner.py                             12     12     0%   5-29
src/secondbrain/timeline/timeline_engine.py                  24     16    33%   11-14, 23-31, 40-66, 75-76, 85
src/secondbrain/timeline_engine.py                           11     11     0%   5-36
src/secondbrain/utils/__init__.py                             6      0   100%
src/secondbrain/utils/config.py                             119     97    18%   25-27, 31-42, 46-51, 55, 101-107, 120-132, 144-156, 168-174, 183, 195-201, 205-210, 219-249
src/secondbrain/utils/config_loader.py                        0      0   100%
src/secondbrain/utils/data_io.py                            117    117     0%   6-266
src/secondbrain/utils/email_analytics.py                    486    486     0%   5-1967
src/secondbrain/utils/email_notifier.py                      59     28    53%   65-77, 81-244, 250-261, 269-279, 287-298, 306-317, 325-335
src/secondbrain/utils/email_queue.py                         71     36    49%   68-80, 87-149, 155-164, 168-195
src/secondbrain/utils/encryption_utils.py                    50     50     0%   6-111
src/secondbrain/utils/hotkey.py                             115     88    23%   25, 29-32, 36-38, 42-43, 47, 51-57, 61-67, 79-101, 113-133, 145-166, 178, 187, 196, 205, 211-223, 227-232
src/secondbrain/utils/logger.py                             103     85    17%   35-69, 82, 96-102, 119-142, 156-167, 180-201, 214-230, 244-279
src/secondbrain/utils/security.py                            63     44    30%   20-23, 27-43, 47-53, 57-60, 64-66, 70-75, 87-89, 101-103, 118-129, 143-144
src/secondbrain/utils/update_checker.py                      80     80     0%   6-165
src/secondbrain/utils/validation.py                          83     65    22%   24-25, 38-51, 65-69, 82-83, 96-127, 141-145, 161-186
src/secondbrain/voice/__init__.py                             2      2     0%   5-7
src/secondbrain/voice/config.py                               2      2     0%   5-7
src/secondbrain/voice/contract_speech.py                      2      2     0%   1-2
src/secondbrain/voice/conversation_loop.py                  119    119     0%   5-209
src/secondbrain/voice/emotion_voice_adapter.py               44     44     0%   5-113
src/secondbrain/voice/examples/__init__.py                    0      0   100%
src/secondbrain/voice/examples/enhanced_persona_demo.py     163    163     0%   5-515
src/secondbrain/voice/examples/persona_demo.py               72     72     0%   5-206
src/secondbrain/voice/main.py                               127    127     0%   5-275
src/secondbrain/voice/respond_with_voice.py                   2      2     0%   6-14
src/secondbrain/voice/samantha_memory_dashboard.py          123    123     0%   5-245
src/secondbrain/voice/voice_enhancement.py                   64     64     0%   5-161
src/secondbrain/voice/voice_modulator.py                     19     19     0%   1-32
src/secondbrain/voice/voice_persona.py                      267    267     0%   6-618
src/secondbrain/voice/voice_processor.py                    341    341     0%   1-591
src/secondbrain/voice/wake_word_listener.py                  93     93     0%   5-196
src/secondbrain/voice_processor.py                           41     11    73%   31-32, 39-40, 42, 46, 50, 54, 58-59, 63
src/secondbrain/vpn_config.py                               174    174     0%   1-339
src/secondbrain/vpn_connection.py                           148    148     0%   1-263
src/secondbrain/vpn_dns.py                                  145    145     0%   1-323
src/secondbrain/vpn_killswitch.py                            93     93     0%   1-203
src/secondbrain/vpn_location.py                             116    116     0%   1-196
src/secondbrain/vpn_manager.py                               47     47     0%   1-78
src/secondbrain/web_scout/global_scanner.py                  82     56    32%   28-39, 43-52, 61-77, 81-92, 96, 106, 115, 125, 130, 135, 140, 149, 154, 159, 164, 168-179, 188-212, 221-245
src/secondbrain/websocket.py                                 61     61     0%   1-118
---------------------------------------------------------------------------------------
TOTAL                                                     10788   9698    10%
=========================== short test summary info ============================
FAILED tests/test_payment_integration.py::test_create_subscription - AttributeError: 'Session' object has no attribute 'id'
FAILED tests/test_payment_integration.py::test_webhook_handling - assert 404 == 200
 +  where 404 = <WrapperTestResponse streamed [404 NOT FOUND]>.status_code
FAILED tests/test_payment_integration.py::test_logging - TypeError: 'bool' object is not subscriptable
FAILED tests/test_payment_integration.py::test_companion_backup_trigger - AttributeError: <module 'src.secondbrain.companion.backup' from '/Users/mac/Applications/SecondBrainApp/src/secondbrain/companion/backup.py'> does not have the attribute 'CompanionBackup'
FAILED tests/test_security.py::test_webhook_verification - AssertionError: Expected 'construct_event' to have been called once. Called 0 times.
FAILED tests/test_security.py::test_webhook_verification_failure - AssertionError: assert not True
 +  where True = verify_webhook_signature(payload='test_payload', signature='test_signature')
 +    where verify_webhook_signature = <secondbrain.monetization.security.SecurityManager object at 0x1305cf370>.verify_webhook_signature
FAILED tests/test_security.py::test_get_encrypted_config - AssertionError: assert 'pk_test_123' != 'pk_test_123'
FAILED tests/test_system_monitor.py::TestSystemMonitorPlugin::test_get_system_metrics - AttributeError: 'SystemMonitorPlugin' object has no attribute 'get_system_metrics'. Did you mean: '_get_system_metrics'?
FAILED tests/test_voice_processor.py::test_initialization - AttributeError: 'VoiceProcessor' object has no attribute '_mic'
FAILED tests/test_voice_processor.py::test_start_stop - OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.
FAILED tests/test_voice_processor.py::test_audio_processing - AttributeError: 'VoiceProcessor' object has no attribute '_recognizer'
FAILED tests/test_voice_processor.py::test_error_recovery - AttributeError: 'VoiceProcessor' object has no attribute 'MAX_RETRIES'
FAILED tests/test_voice_processor.py::test_settings_loading - AttributeError: 'VoiceProcessor' object has no attribute 'load_settings'
FAILED tests/test_voice_processor.py::test_consecutive_errors - AttributeError: 'VoiceProcessor' object has no attribute '_recognizer'
FAILED tests/test_webhook_handler.py::test_checkout_completed_event - assert 500 == 200
 +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code
FAILED tests/test_webhook_handler.py::test_subscription_deleted_event - assert 500 == 200
 +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code
FAILED tests/test_webhook_handler.py::test_payment_failed_event - assert 500 == 200
 +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code
FAILED tests/test_webhook_handler.py::test_subscription_updated_event - assert 500 == 200
 +  where 500 = <WrapperTestResponse streamed [500 INTERNAL SERVER ERROR]>.status_code
======================== 18 failed, 40 passed in 11.80s ========================
