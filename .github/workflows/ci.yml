on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Git Identity (Baddy Agent)
        run: |
          git config --global user.name "Baddy Agent"
          git config --global user.email "baddy@njanja.net"

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "‚ö†Ô∏è No requirements.txt found. Skipping dependency install."
          fi

      - name: Run Tests (safely)
        run: |
          if [ -d "tests" ]; then
            echo "‚úÖ Running tests..."
            pytest tests
          else
            echo "‚ö†Ô∏è No tests directory found. Skipping tests."
          fi

  coverage:
    needs: test
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  build:
    needs: test
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          brew install create-dmg

      - name: Create App Bundle
        run: ./create_app_bundle.command

      - name: Create DMG
        run: ./create_dmg.command

  release:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Release
        run: python src/ci_agent/release.py --app BaddyAgent.app --notes release_notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Upload to Cloud
        run: |
          python src/ci_agent/cloud_upload.py \
            --input BaddyAgent.dmg \
            --version ${{ github.ref_name }}
        env:
          DROPBOX_TOKEN: ${{ secrets.DROPBOX_TOKEN }}
          GDRIVE_CREDENTIALS: ${{ secrets.GDRIVE_CREDENTIALS }}

      - name: Sync to Thronesight
        run: bash scripts/thronesight_sync.sh
        env:
          THRONESIGHT_API_KEY: ${{ secrets.THRONESIGHT_API_KEY }}

  notify:
    needs: test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          STATUS: ${{ needs.test.result }}
        run: |
          curl -X POST "$DISCORD_WEBHOOK" \
          -H "Content-Type: application/json" \
          -d "$(jq -n --arg status "$STATUS" '
          {
            username: "üß† Baddy Agent CI",
            embeds: [
              {
                title: "üö¶ CI Pipeline Report",
                description: "Workflow completed with status: \($status)",
                color: (if $status == "success" then 3066993 else 15158332 end)
              }
            ]
          }')"
